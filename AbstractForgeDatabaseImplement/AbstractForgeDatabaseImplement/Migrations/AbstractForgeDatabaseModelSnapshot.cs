// <auto-generated />
using System;
using AbstractForgeDatabaseImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AbstractForgeDatabaseImplement.Migrations
{
    [DbContext(typeof(AbstractForgeDatabase))]
    partial class AbstractForgeDatabaseModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.Component", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ComponentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Components");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.Manufacture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ManufactureName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Manufactures");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.ManufactureComponent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComponentId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("DBComponentId")
                        .HasColumnType("int");

                    b.Property<int?>("DBManufactureId")
                        .HasColumnType("int");

                    b.Property<int>("ManufactureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DBComponentId");

                    b.HasIndex("DBManufactureId");

                    b.ToTable("ManufactureComponents");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int?>("DBManufactureId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateImplement")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManufactureId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Sum")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DBManufactureId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.ManufactureComponent", b =>
                {
                    b.HasOne("AbstractForgeDatabaseImplement.Models.Component", "Component")
                        .WithMany("ManufactureComponents")
                        .HasForeignKey("DBComponentId");

                    b.HasOne("AbstractForgeDatabaseImplement.Models.Manufacture", "Manufacture")
                        .WithMany("ManufactureComponents")
                        .HasForeignKey("DBManufactureId");

                    b.Navigation("Component");

                    b.Navigation("Manufacture");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.Order", b =>
                {
                    b.HasOne("AbstractForgeDatabaseImplement.Models.Manufacture", "Manufacture")
                        .WithMany("Orders")
                        .HasForeignKey("DBManufactureId");

                    b.Navigation("Manufacture");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.Component", b =>
                {
                    b.Navigation("ManufactureComponents");
                });

            modelBuilder.Entity("AbstractForgeDatabaseImplement.Models.Manufacture", b =>
                {
                    b.Navigation("ManufactureComponents");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
